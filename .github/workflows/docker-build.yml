name: Docker Build and Push

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 可选：如果需要推送到Docker Hub或GitHub Packages，取消下面的注释
      # - name: Log in to Docker Hub
      #   uses: docker/login-action@v2
      #   with:
      #     username: ${{ secrets.DOCKER_HUB_USERNAME }}
      #     password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: false  # 设置为true以推送镜像
          tags: quant-notebook:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Test with Docker Compose
        run: |
          docker compose up -d quant-tests
          docker logs quant-tests
          docker compose down

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # 这里可以添加部署步骤，例如通过SSH连接到远程服务器并更新容器
      # - name: Deploy to remote server
      #   uses: appleboy/ssh-action@v0.1.5
      #   with:
      #     host: ${{ secrets.REMOTE_HOST }}
      #     username: ${{ secrets.REMOTE_USER }}
      #     key: ${{ secrets.REMOTE_KEY }}
      #     script: |
      #       cd /path/to/deployment
      #       git pull
      #       docker compose pull
      #       docker compose up -d

  interactive-notebook:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and run interactive notebook
        run: |
          docker compose up -d quant-jupyter
          sleep 10  # 等待Notebook启动
          docker logs quant-jupyter | grep 'token='

      # 注意：GitHub Actions环境中的Jupyter Notebook无法直接从外部访问
      # 如需在远端操作，建议使用GitHub Codespaces或部署到云服务器